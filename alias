#!/bin/sh    # for syntax highlighting only
# Handy shell functions for development and testing.  You can source these in a
# new shell with ". alias".

function .todo()
	{
	grep -ra TODO build test src share --exclude=".*.swp"
	}

function .later()
	{
	grep -ra "LATER" build test src share --exclude=".*.swp"
	}

function .build()
	{
	./build quiet
	}

function .fexl()
	{
	.build && bin/fexl $1
	}

# Search source.
function .s()
	{
	grep -r "$1" src/* --exclude "*.swp"
	}

# Search source for whole word.
function .sw()
	{
	grep -r "\<$1\>" src/* --exclude "*.swp"
	}

# Run a test script.
function .run()
	{
	.build &&
	bin/fexl "test/$1.fxl"
	}

# Check that the output of a test script equals its reference output.  I use
# the "cat" form here in case the script uses interactive input like char_get.
function .check()
	{
	.build &&
	cat "test/$1.fxl" | bin/fexl | diff -a - "test/$1.out"
	}

# Time a test script, also checking its output.
function .time()
	{
	.build &&
	time (cat "test/$1.fxl" | bin/fexl | diff -a - "test/$1.out")
	}

# git status
function .gs()
	{
	git status
	}

# git diff (-a treats binary files as text)
function .gd()
	{
	git diff -a $1
	}
