== test_buf
len=4
I
== test_forms
C
S
I
I
(C "x")
R
L
(L I)
((S ((R S) ((R (R S)) S))) S)
I
I
(I "x")
{x}
{{string_len} {"abcd"}}
{{{x} (I {z})} ((I {y}) (I {z}))}
== test_putchar
abc
== test_fputc
abcd
== test_readlink
/home/patrick/project/fexl/bin/fexl
/home/patrick/project/fexl/
== test_say
Hello world.
x = !5
x


x
xy
== test_ping
Ping!
Ping!
Ping!
Ping!
== test_long
0
3
-1
79
15
0
7
0
0
42

0
0
0
-1
-1
-1
1
1
1

0
1
-1
57
-57
9223372036854775807
-9223372036854775808
9223372036854775807
-9223372036854775808
9223372036854775807
-9223372036854775808
= order
LT
LT
EQ
GT
GT
= long_double
4
0
-1
-37
126478
= long_char
a
b
c
d
== test_double
70.8
nan
inf
-inf
6.28318530717959
99999
-907.285
42.333

0
0
0
-1
-1
-1
1
1
1
LT
LT
LT
EQ
EQ
GT
GT
GT
= double_long
4
0
-1
-37
126478
4
0
-1
-37
126478
4
0
-1
-37
126478
-126478
== test_string_common
3
== test_string_len
0
1
1
2
5
6
== test_string_cmp
-1
-1
-1
0
0
0
1
1
1
== test_string_at
0
0
0
0
97
0
97
98
99
100
== test_string_long
yes 0
yes 1
yes -1
yes 123
yes -123
no
no
no
no
no
no
no
== test_string_double
yes 0
yes 1
yes -1
yes 123
yes -123
no
no
no
no
no
yes 456.78
no
yes 1.6
yes 0
yes -0
yes -0
yes -0.0123
yes 3.14159265358979
yes 1
yes 120000
yes -2.84e-06
== test_string_slice
try "" 0 0 = ""

try "a" 0 0 = ""
try "a" 0 1 = "a"
try "a" 1 0 = ""

try "abc" 0 0 = ""
try "abc" 0 1 = "a"
try "abc" 0 2 = "ab"
try "abc" 0 3 = "abc"
try "abc" 1 0 = ""
try "abc" 1 1 = "b"
try "abc" 1 2 = "bc"
try "abc" 2 0 = ""
try "abc" 2 1 = "c"

try "" -1 0 = ""
try "" -1 1 = ""
try "" -1 2 = ""

try "a" -1 0 = ""
try "a" -1 1 = "a"
try "a" -1 2 = "a"

try "abcd" -1 0 = ""
try "abcd" -1 1 = "d"
try "abcd" -1 2 = "d"
try "abcd" -1 3 = "d"
try "abcd" -1 4 = "d"
try "abcd" -1 5 = "d"
try "abcd" -1 6 = "d"

try "abcd" -2 0 = ""
try "abcd" -2 1 = "c"
try "abcd" -2 2 = "cd"
try "abcd" -2 3 = "cd"
try "abcd" -2 4 = "cd"
try "abcd" -2 5 = "cd"
try "abcd" -2 6 = "cd"
try "abcd" -2 7 = "cd"
try "a" -1 0 = ""
try "a" -1 1 = "a"
try "a" -1 2 = "a"
try "a" -2 1 = ""
try "a" -7 6 = ""
try "abcdefg" -4 2 = "de"
try "abcdefg" -6 3 = "bcd"
try "abcdefg" -7 3 = "abc"
try "abcdefg" -8 3 = "ab"
try "abcdefg" -8 2 = "a"
try "abcdefg" -8 1 = ""
try "abcdefg" -8 0 = ""

try "abcd" 0 -1 = "abc"
try "abcd" 2 -1 = "c"
try "abcd" 2 -3 = ""

try "" 0 1 = ""
try "" 1 2 = ""
try "a" 0 2 = "a"
try "a" 1 1 = ""
try "abc" 0 4 = "abc"
try "abc" 2 2 = "c"
try "abcde" 0 700 = "abcde"
try "abcde" 0 6 = "abcde"

try "abc" -1 0 = ""
try "abc" -1 1 = "c"
try "abc" -1 2 = "c"
try "abc" -1 3 = "c"
try "abc" -1 4 = "c"
try "abc" -1 5 = "c"

try "abc" 0 0 = ""
try "abc" 0 1 = "a"
try "abc" 0 2 = "ab"
try "abc" 0 3 = "abc"
try "abc" 0 4 = "abc"

try "abc" 1 0 = ""
try "abc" 1 1 = "b"
try "abc" 1 2 = "bc"
try "abc" 1 3 = "bc"

try "abc" 2 0 = ""
try "abc" 2 1 = "c"
try "abc" 2 2 = "c"

try "a" 0 1 = "a"
try "a" -1 2 = "a"
try "a" -2 3 = "a"
try "a" -2 4 = "a"
try "a" -2 0 = ""

try "abcde" 0 5 = "abcde"
try "abcde" -1 5 = "e"
try "abcde" -2 5 = "de"
try "abcde" -3 5 = "cde"
try "abcde" -4 5 = "bcde"
try "abcde" -5 5 = "abcde"
try "abcde" -5 6 = "abcde"
try "abcde" -5 7 = "abcde"
try "abcde" -5 8 = "abcde"
try "abcde" -5 9 = "abcde"
try "abcde" -5 10 = "abcde"
try "abcde" -5 900 = "abcde"

try "" 0 800 = ""
try "" -30 800 = ""

try "a" 0 9223372036854775807 = "a"
try "a" 1 9223372036854775807 = ""
try "a" -9223372036854775808 9223372036854775807 = ""
try "a" -7 6 = ""
try "a" 9223372036854775807 -9223372036854775808 = ""
== test_string_index
try "abcdefg" "de" 0 = 3
try "abcdefg" "de" 2 = 3
try "abcdefg" "de" 3 = 3
try "abcdefg" "de" 4 = -1
try "" "" 0 = 0
try "" "a" 0 = -1
try "" "" -1 = 0
try "abcdefghijklmnop" "" 0 = 0
try "abcdefghijklmnop" "" 7 = 7
try "abcdefghijklmnop" "" 15 = 15
try "abcdefghijklmnop" "ghI" 0 = -1
try "abcdefghijklmnop" "ghi" 0 = 6
try "abcdefghijklmnop" "mnop" 0 = 12
try "abcdefghijklmnop" "mnopq" 0 = -1
try "abcdefghijklmnop" "p" 0 = 15
try "abcdefghijklmnop" "q" 0 = -1
try "abcdefghijklmnop" "abcdefghijklmnop" 0 = 0
try "abcdefghijklmnop" "abcdefghijklmnop" 1 = -1
try "abcdefghijklmnop" "abcdefghijklmnopq" 0 = -1
try "a" "ab" 0 = -1
try "a" "a" 0 = 0
== test_argv
2

bin/fexl
test/a1.fxl

== test_later
(later ((I later) (I C)))
((I later) (I C))
(I C)
C
== test_file
file:0
file:1
file:2
fopen test/a1.fxl : yes
fopen test/a1x.fxl : no
== test_list

a
a b
a b c d
a b c d c d
x y x y x y x y
x
y
== test_var
x is var:C
x is var:7
x contains 7
x contains 42
== test_lib
Symbol fexl_long_string exists.
Symbol foobar does not exist.
Symbol fexl_order exists.
Symbol string_long exists.
Symbol op_cmp does not exist.
== test_parse
Parsing the tail of test/a1.fxl on line 735
== form      = {{(R ((R I) ((S I) I))) {{R {say}} {{R {item {"x = "}}} ((L item) C)}}} {3}}
== Now evaluate
x = 3
x = 3
== value     = I
== test_range
The count goes on
  4,
  3,
  2,
  1,
Earth below us
