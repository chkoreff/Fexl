== test_buf
len=4
:: I
== test_forms
:: C
:: S
:: I
:: I
:: (C "x")
:: R
:: L
:: (L I)
:: ((S ((R S) ((R (R S)) S))) S)
:: I
:: I
:: (I "x")
:: {x}
:: {{string_len} {"abcd"}}
:: {{{x} (I {z})} ((I {y}) (I {z}))}
== test_putchar
abc
== test_fputc
abcd
== test_readlink
/home/patrick/project/fexl/bin/fexl
== test_say
Hello world.
== test_ping
Ping!
Ping!
Ping!
Ping!
== test_long
0
3
-1
79
15
0
7
0
0
42
0
1
-1
57
-57
9223372036854775807
-9223372036854775808
9223372036854775807
-9223372036854775808
9223372036854775807
-9223372036854775808
== test_double
70.8
-nan
inf
-inf
6.28318530717959
99999
-907.285
42.333
== test_string_common
3
== test_string_len
0
1
1
2
5
6
== test_string_cmp
-1
-1
-1
0
0
0
1
1
1
== test_string_at
0
0
0
0
97
0
97
98
99
100
== test_argv
2

bin/fexl
test/a1.fxl

== test_later
:: (later ((I later) (((L I) C) I)))
:: ((I later) (((L I) C) I))
:: (((L I) C) I)
:: C
== test_parse
Parsing the tail of test/a1.fxl
form :: {{(R ((S I) I)) {{{say} {"Hello world."}} {say}}} {3}}
line :: 424
== Loop through symbols
sym  :: {say}
form :: {{L {(R (R ((S I) I))) {{S {(L I) {"Hello world."}}} I}}} {3}}

sym  :: {"Hello world."}
form :: {(L ((R L) ((R (R (R ((S I) I)))) ((L ((R S) (L I))) I)))) {3}}

sym  :: {3}
form :: (L ((R L) ((R (R (R ((S I) I)))) ((L ((R S) (L I))) I))))

