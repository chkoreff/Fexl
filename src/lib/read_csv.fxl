# Parse the CSV (comma-separated value) format.
# NOTE: https://www.ietf.org/rfc/rfc4180.txt
# "Spaces are considered part of a field and should not be ignored."
\get_plain_item=
	(\sep
	collect_to
		(
		at_ch sep T;
		at_eol T;
		at_eof T;
		F
		)
	)

# Get a quoted item.  A single QU char is treated as end of string.  Two QU
# chars in a row are treated as a single QU character which appears in the
# string.
\\get_quote_item=
	(
	skip
	\buf=buf_new
	@\\loop
	at_ch QU
		(
		skip
		at_ch QU
			(
			buf_keep buf
			loop
			)
			(buf_get buf)
		);
	at_eof void;
	buf_keep buf
	loop
	)

\get_item=
	(\sep
	at_ch QU get_quote_item;
	at_eof void;
	get_plain_item sep
	)

\get_row=
	(\sep
	@\\loop
	\item=(get_item sep)
	is_undef item void;
	at_ch sep
		(
		skip
		\row=loop
		is_undef row [item] [item;row]
		)
		[item]
	)

\get_rows=
	(\sep
	@\\loop
	skip_match at_eol
	\row=(get_row sep)
	is_undef row [];
	\rows=loop
	[row;rows]
	)

\parse=(\read\sep\x read x (get_rows sep))

# Use arbitrary separator.
\read_xsv_string=(parse read_stream)
\read_xsv_chars=(parse read_chars)
\read_xsv_file=(parse read_file)

# comma-separated
\read_csv_string=(read_xsv_string ",")
\read_csv_chars=(read_xsv_chars ",")
\read_csv_file=(read_xsv_file ",")

# tab-separated
\read_tsv_string=(read_xsv_string TAB)
\read_tsv_chars=(read_xsv_chars TAB)
\read_tsv_file=(read_xsv_file TAB)

define "read_xsv_string" read_xsv_string
define "read_xsv_chars" read_xsv_chars
define "read_xsv_file" read_xsv_file
define "read_csv_string" read_csv_string
define "read_csv_chars" read_csv_chars
define "read_csv_file" read_csv_file
define "read_tsv_string" read_tsv_string
define "read_tsv_chars" read_tsv_chars
define "read_tsv_file" read_tsv_file
