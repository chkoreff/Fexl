# Map number 0-15 to one hex digit (lower-case).
\hex_digit=
	(\n
	lt n 10 (chr (+ 48 n));
	chr (+ 97 (- n 10))
	)

# Map number 0-255 to two hex digits.
\hex_byte=
	(\n
	\hi=(trunc; / n 16)
	\lo=(mod n 16)
	. (hex_digit hi) (hex_digit lo)
	)

# Map digit "0"-"9" or "a"-"f" or "A"-"F" to a decimal number 0-15.
\hex_digit_to_dec=
	(\ch
	\n=(ord ch)
	and (ge n 48) (le n 57) (- n 48);  # 0-9
	and (ge n 97) (le n 102) (- n 87); # a-f
	and (ge n 65) (le n 70) (- n 55);  # A-F
	void
	)

# XOR two hex digit strings together.
\xor_hex=
	(\x\y
	\xl=(map hex_digit_to_dec; str_bytes x)
	\yl=(map hex_digit_to_dec; str_bytes y)
	\zl=(list_combine xor xl yl)
	\zl=(map hex_digit zl)
	to_str zl
	)

\oct=
	(\str
	fold
		(\z\byte
		\digit=
			(
			\n=(ord byte)
			and (ge n 48) (le n 57) (- n 48);
			void
			)
		+ digit (* 8 z)
		)
		0
		(str_bytes str)
	)

\hex=
	(\str
	fold
		(\z\byte
		\digit=
			(
			\n=(ord byte)
			and (ge n 48) (le n 57) (- n 48);
			and (ge n 97) (le n 102) (+ 10; - n 97);
			and (ge n 65) (le n 70) (+ 10; - n 65);
			void
			)
		+ digit (* 16 z)
		)
		0
		(str_bytes str)
	)

def "hex_digit" hex_digit;
def "hex_byte" hex_byte;
def "hex_digit_to_dec" hex_digit_to_dec;
def "xor_hex" xor_hex;
def "oct" oct;
def "hex" hex;
void
