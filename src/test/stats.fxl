use "test/common.fxl" \;

# Normal distribution with mean 0 and standard deviation 1.
\rand_normal=
	(
	\r1==rand
	\r2==rand
	* (sqrt; * -2 (log r1)) (cos; * tau r2)
	)

\show_statistics=
(
\fund_list_ror
\benchmark_list_ror

\list_sub=(list_combine -)

\list_mean=(\xs / (list_sum xs) (list_length xs))

\list_variance=
	(\list
	\mean==(list_mean list)
	\diff==(map (\val - val mean) list)
	\square_diff==(map (\val * val val) diff)
	list_mean square_diff
	)

\list_stddev=(\list sqrt; list_variance list)

# http://en.wikipedia.org/wiki/Sharpe_Ratio
# original source http://web.stanford.edu/~wfsharpe/art/sr/sr.htm
\list_sharpe=
	(\list
	\mean=(list_mean list)
	\stddev=(list_stddev list)
	/ mean stddev
	)

##

\excess_list_ror=(list_sub fund_list_ror benchmark_list_ror)

# Average Fund vs. Risk-Free Return
\fund_mean=(list_mean fund_list_ror)

# Standard Deviation of Fund vs. Risk-Free Return
\fund_stddev=(list_stddev fund_list_ror)

# Sharpe Ratio of Fund vs. Risk-Free Return
\fund_sharpe=(list_sharpe fund_list_ror)

# Standard Deviation of Fund vs. Benchmark Return
\excess_stddev=(list_stddev excess_list_ror)

# Modigliani risk-adjusted performance
\relative_stddev=(/ excess_stddev fund_stddev)

# LATER add the mean "risk-free" rate of return, which I set at 0 for now.
\fund_m2=(* fund_sharpe excess_stddev)

# Sharpe Ratio of Fund vs. Benchmark Return
\excess_sharpe=(list_sharpe excess_list_ror)

\put_sharpe=(\sharpe put (format_num 4 "" sharpe))
\put_ror=(\ror put (format_num 4 "" ror) put "%")
\p=(say "<p>")

(
say "Average Fund vs. Risk-Free Return"
put_ror fund_mean nl

say "Standard Deviation of Fund vs. Risk-Free Return"
put_ror fund_stddev nl

say "Sharpe Ratio of Fund vs. Risk-Free Return"
put_sharpe fund_sharpe nl

say "Standard Deviation of Fund vs. Benchmark Return"
put_ror excess_stddev nl

say "Relative Standard Deviation"
put_sharpe relative_stddev nl

say "Modigliani risk-adjusted performance"
put_ror fund_m2 nl

say "Sharpe Ratio of Fund vs. Benchmark"
put_sharpe excess_sharpe nl

)
)

# Make a random Rate of Return function with given mean and stddev.
\make_rand_ror=
	(\pct_mean\pct_stddev
	\mean=(/ pct_mean 100)
	\stddev=(/ pct_stddev 100)
	yield;
	\x==rand_normal
	\factor=(+ (+ 1 mean) (* stddev x))
	\ror=(* 100 (- factor 1))
	ror
	)

# Return data for 200810 - 201407

# S&P 500
\benchmark_list_ror=
[
-16.5237724084178
-6.9561157796452
0.978424485700002
-8.2111801242236
-10.7457030721342
8.339651250948
9.923023093072
5.85688820982899
-0.0721674284340001
7.462686567164
3.69623655914
3.54288183192899
-1.919465887753
6.15826419910701
1.903616872057
-3.6279618523252
3.12181187512801
6.08428967154699
1.548074232957
-7.9437964918725
-5.1775738228252
6.82798527091
-4.5006893834942
8.961534495205
3.823585084232
0
6.68185961713801
2.332735196104
3.473613894456
0.00806972240199322
2.896796578714
-1.1213927227102
-1.6892695693552
-2.000645369474
-5.4988475469213
-6.9425087108014
10.923897781522
-0.4135021097046
1.050758410304
4.63731656184501
4.33563071005001
3.218373146939
-0.669742521208505
-6.0008990110878
4.056746632661
1.17953431372499
2.50567751703299
2.54043275976701
-1.8221101908534
0.564847417839998
0.897220803850995
5.118565644881
1.27235213204999
3.796264855688
1.92358021460399
2.36230581589401
-1.33575818387059
5.167482361914
-2.9977033724163
3.16510903426801
4.626162580022
2.966982221196
2.58997645476
-3.5245901639344
4.55395072217499
0.828863968796001
0.693101225016002
2.321114134785
2.06508135168999
0.827713059473001
]

make_rand_ror 1.4 6.0 \rand_ror
stream_values rand_ror \list_rand_ror

seed_rand 0.1964
\len=(list_length benchmark_list_ror)
\fund_list_ror=(first len list_rand_ror)

\show_returns=
	(
	\xs\ys
	\show_lists=
		(@\loop\xs\ys
		xs () \x\xs
		ys () \y\ys
		put x put " " put y nl
		loop xs ys
		)
	say "Returns (Fund vs. Benchmark)"
	say "["
	show_lists xs ys
	say "]"
	)
show_returns fund_list_ror benchmark_list_ror
show_statistics
	fund_list_ror
	benchmark_list_ror
