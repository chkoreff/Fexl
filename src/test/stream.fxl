#use_new_syntax
# Test stream operations.

\test_1=
(
\read=
	(
	say "READ"
	(@\loop
	at_eof ();
	put look
	skip

	# Test nested stream.
	if T
		(
		put "("
		(
		\fh=(readstr "12")
		read_stream fh;
		@\loop
		at_eof ();
		put look
		skip
		loop
		)
		put ")"
		)
	loop
	)
	nl
	say ["line = "line]
	["x" "y"] # Return fixed result.
	)

\try=
	(\fh
	\\result=(read_stream fh read)
	say ["result = "(as_str result)]
	nl
	)

# Test the default empty stream.
\test_empty=
	(
	say "EMPTY"
	say ["line "line]
	\try=
		(
		say ["x = "(as_str look)]
		skip
		)

	try
	try
	nl
	)

show_benchmark;
test_empty
try "abcd"
try (readstr "abcd")
try (fopen "test/hello.fxl" "r")
try 32 # invalid source

try
~
line 1
line 2
line 3~
)

\test_2=
(
(
# Empty stream
nl
read_stream "";
say [at_eof (at_ch "")]
skip
say [at_eof (at_ch "")]
)
(
# Stream with a single NUL character
nl
read_stream (chr 0);
say [at_eof (at_ch "")]
skip
say [at_eof (at_ch "")]
)
(
# Stream with multiple characters
nl
read_stream "abc";
say [at_eof (at_ch "a") (at_ch "x")]
skip
say [at_eof (at_ch "b") (at_ch "x")]
skip
say [at_eof (at_ch "c")]
skip
say [at_eof (at_ch "c")]
)
)

test_1
test_2
say "DONE"
