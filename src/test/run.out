==== test/a1.fxl
==
ping
==
ping
==
ping
ping
ping
ping
ping
ping
ping
ping
ping
ping
ping
ping
==
ping
ping
ping
ping
ping
ping
==
str abc
str abc
void
str abcde
void
str abcde
void
str abcde
void
num 3.14159265358979
num 42
num 5
num 4
str cdefg
num 467.86
num 1.61803398874989
bool T
bool F
bool T
bool F
bool T
bool T
void
void
void
==
str 1.61803398874989
num 1.61803398874989
other
void
void
str 5.8
void
num 3
void
void
void
num 3
void
num 42
void
num -7.8
num 0
num -0
num 43.8
==
str 
str 
str 
==
str a
str 
str 
==
str 
str a
str ab
str abc
str abcd
str abcd
==
str 
str b
str bc
str bcd
str bcd
==
str 
str c
str cd
str cd
==
str 
str d
str d
==
void
void
void
void
==
num 3
num 2
void
num 2
void
num 3
num 3
void
void
void
num 0
num 7
num 15
void
num 6
num 12
void
num 15
void
num 0
void
void
void
num 0
void
void
== test char_width
str hej åabcüdef üä 1≠0 包子x
ch h
ch e
ch j
ch  
ch å
ch a
ch b
ch c
ch ü
ch d
ch e
ch f
ch  
ch ü
ch ä
ch  
ch 1
ch ≠
ch 0
ch  
ch 包
ch 子
ch x
== test buf
: abcdefg
: 
: abcde
: tuvwxyz
TTFFabc 2.3 -3.8 defg
==
bool F
bool F
bool T
bool T
bool F
bool T
bool T
bool T
bool T
bool F
bool F
bool T
bool F
==
void
void
void
num 3
void
bool T
void
void
void
void
num 4
void
void
num 3
void
str 42
void
void
bool T
str abc
void
str abcde
void
void
num 3
void
void
str de
str defg
void
void
num 42
void
void
==
abcd~ABA
AAB~ABC
hello
"hello"
~(1) "hello"~(1)
~(2) ~(1) "hello"~(1)~(2)
"Ain't nothin' simple when you're doin' it for real." (Gus Baird)

"My fathers sleep on the sunrise plains,
And each one sleeps alone.
Their trails may dim to the grass and rains,
For I choose to make my own.
I lay proud claim to their blood and name,
But I lean on no dead kin;
My name is mine, for the praise or scorn,
And the world began when I was born
And the world is mine to win. ..."

  (Badger Clark, "The Westerner")

==
[
(CALC)
x = 30
x = 30
x = 30
x = 30
]
==
(CALC)1936
88
square 4=16
square 7=49
16
49
==
Hello world!
==
f = hej
åabcüdef
ghij
üä
1≠0
封

åabcüdef = hej åabcüdef
ghij = hej ghij
üä = hej üä
1≠0 = hej 1≠0
vegetable grönsak
dessert efterrätt
==
3 bottles of beer on the wall
3 bottles of beer
Take one down, pass it around
2 bottles of beer on the wall

2 bottles of beer on the wall
2 bottles of beer
Take one down, pass it around
1 bottle of beer on the wall

1 bottle of beer on the wall
1 bottle of beer
Take one down, pass it around
0 bottles of beer on the wall

==
x = 23
x = 70
x = 35
x = 106
x = 53
x = 160
x = 80
x = 40
x = 20
x = 10
x = 5
x = 16
x = 8
x = 4
x = 2
x = 1

==
x = 81
==
str x
num 5
==
fib 0 = 0
fib 1 = 1
fib 2 = 1
fib 3 = 2
fib 4 = 3
fib 5 = 5
fib 6 = 8
fib 7 = 13
fib 8 = 21
==
fib 8 = 21
fib 7 = 13
fib 6 = 8
fib 5 = 5
fib 4 = 3
fib 3 = 2
fib 2 = 1
fib 1 = 1
fib 0 = 0
==
fib 30 = 832040
==
fib 11 = 89
fib 12 = 144
fib 13 = 233
fib 14 = 377
fib 15 = 610
fib 16 = 987
fib 17 = 1597
fib 18 = 2584
fib 19 = 4181
fib 20 = 6765
fib 21 = 10946
==
hi
I am Fred.
35.2
74.5
74.5
74.5
15
14
14.8
3.84707681233427
121.510417518735
1.56861591791385
-0.996164608835841
bye
==
45.87
==
length is 16777216
==
Hello world.
x = 42
47
37
210
8.4
inf
==
T
T
T
F
T
T
F
T
T
F
F
F
F
T
T
T
F
F
T
T
F
T
F
F
T
==
-4.97
210802.919995902
4.8655
5
49.4600760456274
100000000000.01
285
125867
7
-7
8
-8
7
-7
7
-7
10000
3.00000000000001
3

a
ab
a
abcdefgh
0
1
3
3
==
[
]
[
1
2
]
[
1
2
]
==
[
0.927291684284476
0.471201063818858
0.677796232364046
0.979630045117638
0.0262161111581214
]
[
0.927291684284476
0.471201063818858
0.677796232364046
0.979630045117638
0.0262161111581214
]
==
[
0.553374707956507
0.316999953387771
0.460828633727892
0.243800594584924
0.221772324397123
]
[
0.553374707956507
0.316999953387771
0.460828633727892
0.243800594584924
0.221772324397123
]
==
Returns (Fund vs. Benchmark)
[
-0.893261320594374 -16.5237724084178
6.64835461191322 -6.9561157796452
-13.8899158690587 0.978424485700002
-7.42083726309821 -8.2111801242236
3.17855669949858 -10.7457030721342
-6.59786522873157 8.339651250948
3.48606686727264 9.923023093072
-0.682005428813126 5.85688820982899
-2.43289592602041 -0.0721674284340001
-5.76926099972037 7.462686567164
-3.05327482058277 3.69623655914
-1.00636347251863 3.54288183192899
0.0782182723713332 -1.919465887753
3.38911087514397 6.15826419910701
-0.217281242107792 1.903616872057
-3.63498264210177 -3.6279618523252
5.61440844291543 3.12181187512801
3.24354516878298 6.08428967154699
7.33192779132095 1.548074232957
5.81561666835948 -7.9437964918725
-0.406389365681947 -5.1775738228252
-6.98223722952097 6.82798527091
12.3711679600035 -4.5006893834942
2.87384595849236 8.961534495205
1.8778094684559 3.823585084232
7.63391664696429 0
-2.23667161458249 6.68185961713801
4.66224451477453 2.332735196104
-0.788235453975683 3.473613894456
-8.07078998275932 0.00806972240199322
-0.978130017823486 2.896796578714
-2.87636811199844 -1.1213927227102
7.97482267628187 -1.6892695693552
8.60965529420248 -2.000645369474
1.20791622426788 -5.4988475469213
4.76889077637657 -6.9425087108014
18.6283281925775 10.923897781522
6.11793431938426 -0.4135021097046
-0.865787441111299 1.050758410304
1.07915664726004 4.63731656184501
-2.01835813630018 4.33563071005001
-7.11981744412673 3.218373146939
8.11806477589498 -0.669742521208505
9.52026643043675 -6.0008990110878
-2.96600202876063 4.056746632661
-1.69208852051672 1.17953431372499
4.09867474496914 2.50567751703299
-2.61735286232427 2.54043275976701
2.73029144176504 -1.8221101908534
-1.09948485009037 0.564847417839998
3.55118726143842 0.897220803850995
-2.86508248957761 5.118565644881
-7.10477189588519 1.27235213204999
6.12734042211471 3.796264855688
1.0860315129092 1.92358021460399
6.0154171502939 2.36230581589401
0.363614841755688 -1.33575818387059
4.08090354462769 5.167482361914
1.21137768806991 -2.9977033724163
-4.4688306021859 3.16510903426801
7.9975253586303 4.626162580022
9.25002054235966 2.966982221196
-1.12943348186301 2.58997645476
-4.34278449974245 -3.5245901639344
1.80183112092489 4.55395072217499
10.3567603188175 0.828863968796001
3.07471154465189 0.693101225016002
5.12094831779006 2.321114134785
2.17648405452895 2.06508135168999
-8.37189862985007 0.827713059473001
]
Average Fund vs. Risk-Free Return
1.2668%
Standard Deviation of Fund vs. Risk-Free Return
5.6103%
Sharpe Ratio of Fund vs. Risk-Free Return
0.2258
Standard Deviation of Fund vs. Benchmark Return
7.5759%
Relative Standard Deviation
1.3504
Modigliani risk-adjusted performance
1.7106%
Sharpe Ratio of Fund vs. Benchmark
0.0275
==
Evaluating the context.
Hi
57
T
HEY: Fred says a
Wilma says b
Goodbye
==
T
T
F
F
T
T
==
T
T
T
T
T
T
T
==
F
F
F
F
F
F
F
==
T
hi
T
T
F
==
F
hi
F
F
T
F
== tuples
{ }
{ a }
{ a b }
{ a b c }
{ a b c d }
{ a b c d e }
{ a b c d e f }

x=3 
x=3 y=4 
x=ab y=cdefg z=65536 
x=3 y=12 
x=3 y=12 z=36 
a=1 b=2 c=3 d=4 e=5 f=6 g=7 
==


a
ab
ab3
ab1.5
x = 3388
x = 3388, y = 3630

a
T
F
TTFTFF


Hello 9
Bye
Hello 9
Bye
Hello 9
Bye
Hello 9
Bye
==
x = 5
y = 6
==
(L)(R)
8
(L)(R)
8
(L)(R)
8
[
am
am
amra
amra
angie
angie
babel
babel
blotch
blotch
bow
bow
crown
crown
dewar
dewar
eb
eb
expel
expel
flam
flam
gibby
gibby
grout
grout
haw
haw
jess
jess
jo
jo
perky
perky
piece
piece
polka
polka
qqqq
qqqq
revel
revel
ro
ro
rug
rug
scud
scud
sham
sham
skip
skip
subtly
subtly
than
than
ur
ur
when
when
]
[
am
amra
angie
babel
blotch
bow
crown
dewar
eb
expel
flam
gibby
grout
haw
jess
jo
perky
piece
polka
qqqq
revel
ro
rug
scud
sham
skip
subtly
than
ur
when
]
female
1 1 2 2 3 3 4 5 5 6 6 7 8 8 9 9 10 11 11 12 13 13 14 14 15 16 16 17 17 18 19 19 20 21 21 22 
male
0 0 1 2 2 3 4 4 5 6 6 7 7 8 9 9 10 11 11 12 12 13 14 14 15 16 16 17 17 18 19 19 20 20 21 22 
diff
1 1 1 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
[
== resolve
symbol say
symbol fred
symbol wilma
symbol is_void
symbol void
symbol barney
== run
I am Fred.
I am Wilma.
test void: T
I am Barney.
]
[
Run in standard context.
15
Run in weird context.
56
]
[
PING
PING
PING
]
==
Let's parse.
Hello world!
Hello world!
Hello world!
==
Let's parse.
5 15
7.2 21.6
-1.3 -3.9
==
Write tmp.txt:
Read tmp.txt:
ch T
ch e
ch s
ch t
ch  
ch d
ch a
ch t
ch a
ch 

ch h
ch e
ch r
ch e
ch 

ch ü
ch ä
ch  
ch 1
ch ≠
ch 0
ch  
ch 包
ch 子
ch 

Removed tmp.txt
==
This should go to stdout.
This goes to the file.
This also goes to the file.
Removed tmp.txt
==
put a
get a
get void
put bc
get b
put d
get c
get d
put efg
get e
put h
get f
get g
get h
get void
Removed tmp.txt
==
Passed var test of 20150907.
The first 16 Fibonacci numbers:
1
1
2
3
5
8
13
21
34
55
89
144
233
377
610
987
The first 5 Fibonacci numbers:
1
1
2
3
5
==
set x = 3
  add: 0 => 1
set y = 4
  add: 1 => 2
set z = 5
  add: 2 => 3
set x = 3
  add: 3 => 4
set y = 4
  add: 4 => 5
set z = 5
  add: 5 => 6
set q = 0
  add: 6 => 7
[
{ q 0 }
{ z 5 }
{ y 4 }
{ x 3 }
{ z 5 }
{ y 4 }
{ x 3 }
]
count = 7
get x = 3
get y = 4
get z = 5
get q = 0
get r = 
bye
==
()x=3
x=3
x=3
==
(x=)3
3
3
==
hi
==
123,456.78901200
-123,456.78901200
123456.78901200

123,456.7890120
-123,456.7890120
123456.7890120

123,456.789012
-123,456.789012
123456.789012

123|456.79
-123|456.79
123456.79

12,345,678.78901
-12,345,678.78901
12345678.78901

0.78901200
-0.78901200
0.78901200

1
-1
1

0
0
0

0.000
0.000
0.000

314.1590000
-314.1590000
314.1590000

0.1590000
-0.1590000
0.1590000

0.159
-0.159
0.159

==
Hi
Hi
==
Hi
Hi
==
Hi
==
c b a 
==
5 4 3 2 1 
==
                  "abc"
               ~1 "abc"~1
            ~2 ~1 "abc"~1~2
         ~3 ~2 ~1 "abc"~1~2~3
      ~4 ~3 ~2 ~1 "abc"~1~2~3~4
   ~5 ~4 ~3 ~2 ~1 "abc"~1~2~3~4~5
~6 ~5 ~4 ~3 ~2 ~1 "abc"~1~2~3~4~5~6

      "ab~1c"
   ~2 "ab~1c"~2
~3 ~2 "ab~1c"~2~3

         ~1 a"b"~2c~1
      ~3 ~1 a"b"~2c~1~3
   ~4 ~3 ~1 a"b"~2c~1~3~4
~5 ~4 ~3 ~1 a"b"~2c~1~3~4~5

==
a & "b" 1<3
a &amp; &quot;b&quot; 1&lt;3
T
==
-1 : (void)
0 : a
1 : b
2 : c
3 : (void)
==
result:
Hello
line 1
line 2
line 3
==
T
T
T
T
F
File handle is properly void after close.
==
Jan 31 January
Feb 29 February
Mar 31 March
Apr 30 April
May 31 May
Jun 30 June
Jul 31 July
Aug 31 August
Sep 30 September
Oct 31 October
Nov 30 November
Dec 31 December
==
== put
[abcdefg3.2TFABCD]
== say
[abcdefg
3.2
T
F

ABCD
]
== fput
[abcdefg3.2TFABCD]
== fsay
[abcdefg
3.2
T
F

ABCD
]
is_newer src/fexl.c bin/fexl = F
is_newer bin/fexl src/fexl.c = T

is_newer src/test/a1.fxl missing = T
is_newer missing src/test/a1.fxl = T

is_newer src/test/a1.fxl src/test/a1.fxl = F
is_newer src/test/a1.fxl src/test/a1.fxl = F

is_newer missing missing = T
is_newer missing missing = T

path "src" type "d"
path "src/fexl.c" type "f"
path "x/y" type ""
path "" type "d"
path "." type "d"
path "bin" type "d"
path "bin/fexl" type "f"
path "x" type ""
509
716826
mkdir : 0
rmdir : 0
exit 0
==== test/a2.fxl
Hello
Type some lines of input and I'll echo them back.
Press Ctrl-D to stop.
ch = 'a'
ch = 'b'
ch = 'c'
ch = '
'
ch = 'd'
ch = 'e'
ch = 'f'
ch = 'g'
ch = '
'
ch = '
'
ch = 'h'
ch = 'i'
ch = 'j'
ch = '
'
ch = 'å'
ch = 'a'
ch = 'b'
ch = 'c'
ch = 'ü'
ch = 'd'
ch = 'e'
ch = 'f'
ch = '
'
ch = 'ü'
ch = 'ä'
ch = ' '
ch = '1'
ch = '≠'
ch = '0'
ch = ' '
ch = '包'
ch = '子'
ch = '
'
Get from string [abcåabcüdef封x]
ch = 'a'
ch = 'b'
ch = 'c'
ch = 'å'
ch = 'a'
ch = 'b'
ch = 'c'
ch = 'ü'
ch = 'd'
ch = 'e'
ch = 'f'
ch = '封'
ch = 'x'
String to list [abcåabcüdef封x]
[
a
b
c
å
a
b
c
ü
d
e
f
封
x
]
Show logical characters in [AOOab~åüää≠封小xyz]
ch = 'A'
ch = 'O'
ch = 'O'
ch = 'a'
ch = 'b'
ch = '~'
ch = 'å'
ch = 'ü'
ch = 'ä'
ch = 'ä'
ch = '≠'
ch = '封'
ch = '小'
ch = 'x'
ch = 'y'
ch = 'z'
Show individual hex bytes in [AOOab~åüää≠封小xyz]
ch = '41'
ch = '4f'
ch = '4f'
ch = '61'
ch = '62'
ch = '7e'
ch = 'c3'
ch = 'a5'
ch = 'c3'
ch = 'bc'
ch = 'c3'
ch = 'a4'
ch = 'c3'
ch = 'a4'
ch = 'e2'
ch = '89'
ch = 'a0'
ch = 'e5'
ch = 'b0'
ch = '81'
ch = 'e5'
ch = 'b0'
ch = '8f'
ch = '78'
ch = '79'
ch = '7a'
Good bye.
exit 0
== stdout:
hello
This goes to stdout.
x = 7
This goes to stdout.
x = 7
bye
== stderr:
This goes to stderr.
x = 7
This goes to stderr.
x = 7
==== test/a4.fxl
[
]
exit 0
==== test/a5.fxl
begin
TALK
TALK
TALK
TALK
end
exit 0
==== test/a6.fxl
==
[
(parsing)
(resolving)
]
Hello world!
Hello world!
==
[
(parsing)
(resolving)
]
HI
HI
==
[
(parsing)
(resolving)
]
got it
x = 7
exit 0
==== test/a7.fxl
Undefined symbol xsay on line 2 of test/a7.fxl
exit 1
==== test/a8.fxl
[
0.927291684284476
0.471201063818858
0.677796232364046
]
[
0.927291684284476
0.471201063818858
0.677796232364046
]
[
0.927291684284476
0.471201063818858
0.677796232364046
]
exit 0
==== test/a9.fxl
== test_1
PING
== test_2
PING
PING
PING
PING
PING
== test_3
PING
PING
PING
== test_4
PING
pong
PING
PING
PING
exit 0
==== test/b10.fxl
[ get 23 get 61 get 62 get 63 get 64 get 65 get 66 get 67 get 68 get 69 get 6a get 6b get 6c get 6d get 6e get 6f ]
[ 23 61 62 63 64 65 66 67 68 69 6a 6b 6c 6d 6e 6f ]
[ 23 61 62 63 64 65 66 67 68 69 6a 6b 6c 6d 6e 6f ]

[ get 70 get 71 get 72 get 73 get 74 get 75 get 76 get 77 get 78 get 79 get 7a get 0a get 23 get 61 get 62 get 63 ]
[ 70 71 72 73 74 75 76 77 78 79 7a 0a 23 61 62 63 ]
[ 70 71 72 73 74 75 76 77 78 79 7a 0a 23 61 62 63 ]

get get get get get get get get get get get get get get get get 6465666768696a6b6c6d6e6f70717273
6465666768696a6b6c6d6e6f70717273
6465666768696a6b6c6d6e6f70717273

get get get get get get get get get get get get get get get get 7475767778797a0a2361626364656667
7475767778797a0a2361626364656667
7475767778797a0a2361626364656667

exit 0
==== test/b11.fxl
path a
dir  .

path a/b/c
dir  a/b

path a/b/c///
dir  a/b

path ../////
dir  .

path ////b/////
dir  /

path a/b////c///
dir  a/b

path aaa/bbb////ccc///
dir  aaa/bbb

path a/b/c
base c

path a/b/c///
base c

path a/b/cde///
base cde

path a
base a

path 
base 

path /a
base a

path ////a
base a

path /
base /

hi
F
0
119252
2.71828182845905
3.14159265358979
6.28318530717959
a
b
07/19/2017
&lt;b&gt;x;&quot;y&quot;&lt;/b&gt;
3,874,511.37
e
["<b>a</b>" {1.2 3.8 "xxx"} T F]
[
"<b>a</b>"
{1.2 3.8 "xxx"}
T
F
]

[&quot;&lt;b&gt;a&lt;/b&gt;&quot; {1.2 3.8 &quot;xxx&quot;} T F]
[
&quot;&lt;b&gt;a&lt;/b&gt;&quot;
{1.2 3.8 &quot;xxx&quot;}
T
F
]

[&quot;&lt;b&gt;a&lt;/b&gt;&quot; ~1 tag &quot;&lt;br&gt;&quot;~1 {1.2 3.8 &quot;xxx&quot;} T F]
[
&quot;&lt;b&gt;a&lt;/b&gt;&quot;
~1 tag &quot;&lt;br&gt;&quot;~1
{1.2 3.8 &quot;xxx&quot;}
T
F
]

~1 1&quot;2&quot;3~1

["a" ~1 "~1 23 {1 2} [T F ~1 "hi"~1 void] -2.3 "a" ~1 "~1 23 {1 2} [T F ~1 "hi"~1 void] -2.3]
["a" ~1 "~1 23 {1 2} [T F ~1 "hi"~1 void] -2.3 "a" ~1 "~1 23 {1 2} [T F ~1 "hi"~1 void] -2.3]
T
= test file_content
#abcdefghijklmnopqrstuvwxyz

key c color orange qty 2
key a color red qty 42
key d color  qty 
key b color blue qty 93

sep   "/"
str   ~1 /a/b/"hi"///d/e/~1
list  ["" "a" "b" ~1 "hi"~1 "" "" "d" "e" ""]

sep   "[XYZ]"
str   ~1 [XYZ]a[XYZ]b[XYZ]"hi"[XYZ][XYZ][XYZ]d[XYZ]e[XYZ]~1
list  ["" "a" "b" ~1 "hi"~1 "" "" "d" "e" ""]

sep   "/"
str   "a/b/c"
list  ["a" "b" "c"]

sep   "."
str   "a.b.c"
list  ["a" "b" "c"]

sep   ""
str   "a"
list  ["a"]

sep   ""
str   ""
list  [""]

sep   ""
str   ""
list  [""]

sep   "/"
str   "/"
list  ["" ""]

sep   "//"
str   "////"
list  ["" "" ""]

!8
!8
!!8
!!8
<td align=right>X</td>
<div class=a>
X
</div>
<div class=a>X</div>
[5 6 7]
!12,345.67
!"hello"
!ABC
!{1 2 3}
![
"a"
"b"
"c"
]
[
"a"
"b"
"c"
]
[
"a"
"b"
"c"
]
void
32.8
.
?color=red
?color=red&amp;shape=circle
?color=blue&amp;key"%21%2a%27%28%29%3b%3a%40%26%3d%2b%24%2c%2f%3f%23%5b%5d%25"1=val"%21%2a%27%28%29%3b%3a%40%26%3d%2b%24%2c%2f%3f%23%5b%5d%25"1&amp;%3d=%3d
:abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789
:ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789
:abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789
TAB 9
NL 10
CR 13
QU 34
= is_var
T
T
F
F
F
T
= str_bytes
length is 10
byte 251
byte 252
byte 253
byte 254
byte 255
byte 0
byte 1
byte 2
byte 3
byte 4
exit 0
==== test/b12.fxl
== test_csv
[
]
[
[-11.36 12]
[21 22]
[31 32]
[41 42 "" "" ""]
[51 52]
["a b" "cd"]
[~1 ab c"hi"~1 "3.14"]
[6]
[33]
]
[
["x"]
]
[
[12 3 "" 4]
[5 6 7]
[~1 a b
"hi"
cd~1 "3.14" -48.7]
[~1 abc,def"ghi"jklmnopqrstuvwxyz~1]
["    "]
]
== test_ssv
[
]
[
["ab" "xzz" "d" "e" "f"]
["g" "hi"]
]
[
["ab" "c" "q"]
["d"]
]
[
["ab" "c"]
["x" "y"]
["z"]
]
[
["a" "x"]
["bc"]
["de" "f"]
]
[
["abcd"]
]
[
["a" "b" "xy" "z"]
["d" "d"]
]
[
["a" "bc"]
["d"]
]
[
["ab" "c d" "e" ~1 f"g"h~1 "ij" ~2 k"l"m~1n~2 "o" "p" "q" "r" "s"]
["tuv"]
]
[
["a" "b"]
]
[
["a"]
]
void
void
void
void
void
[
["ab" "xzz" "d" "e" "f"]
["g" "hi"]
["ab" "c"]
["x" "y"]
["z"]
["a" "x"]
["a" "b" "c d" "e" ~1 f"gh"~1 "ij" ~2 k"l"m~1n~2 "o" "p" "q" "r" "s"]
["tuv"]
["a bb c" ~1 x"y"z~1 "21" "38.3" "-44"]
["aaaa" "Block of text here.
Second line.
" "another block
second line"]
["1" "2" "3"]
["~a~ab~abc~abcd"]
]
exit 0
==== test/b13.fxl
== test_full_context
name say : T
name is_defined : T
name standard : F
name + : T
name @ : T
name define : T
name if : T
name each : T
name div : T
name show_list : T
name use_file : T
name use_lib : T
name use : T
name void : T
name dirname : T
name hex_digit : T
name read_ssv_file : T
name read_csv_file : T
name 2.5 : T
name 0 : T
name -3.56 : T
name -3.56e-4 : T
name -3.56e-4x : F
name x : F
== test_restricted_context
name say : T
name is_defined : T
name standard : F
name + : F
name @ : F
name define : F
name if : F
name each : F
name div : F
name show_list : F
name use_file : F
name use_lib : F
name use : F
name void : F
name dirname : F
name hex_digit : F
name read_ssv_file : F
name read_csv_file : F
name 2.5 : F
name 0 : F
name -3.56 : F
name -3.56e-4 : F
name -3.56e-4x : F
name x : F
exit 0
==== test/b14.fxl
directory src/lib
[
.
..
bool.fxl
date.fxl
format.fxl
hex.fxl
html.fxl
index.fxl
list.fxl
math.fxl
read.fxl
read_csv.fxl
read_ssv.fxl
]
Created test/vector
open (pos 0)
seek_set 0 (pos 0)
truncate 100 (pos 0)
seek_set 10 (pos 10)
write 26 bytes "abcdefghijklmnopqrstuvwxyz" (pos 36)
seek_cur -3 (pos 33)
write 3 bytes "XYZ" (pos 36)
seek_end -20 (pos 80)
write 5 bytes "12345" (pos 85)
seek_set 10 (pos 10)
read 16 bytes "abcdefghijklmnop" (pos 26)
read 0 bytes "" (pos 26)
read 10 bytes "qrstuvwXYZ" (pos 36)
seek_end -3 (pos 97)
write 3 bytes "ABC" (pos 100)
seek_end -3 (pos 97)
read 3 bytes "ABC" (pos 100)
Removed test/vector
exit 0
==== test/b15.fxl
\index=
{"" "5763"
void
{"123456" "v2_123456"
void
{"a" "4999"
{"bc" "4113"
{"d" "2174"
void
void
}
void
}
{"def" "7249"
void
{"fgh" void
{"i" "5851"
void
{"j" "3674"
void
void
}
}
{"mno" void
{"f" "1286"
void
{"g" "0053"
void
void
}
}
{"xy" "2113"
{"z" "4113"
void
void
}
void
}
}
}
}
}
}
}
\pairs=
[
{"" "5763"}
{"123456" "v2_123456"}
{"a" "4999"}
{"abc" "4113"}
{"abcd" "2174"}
{"def" "7249"}
{"fghi" "5851"}
{"fghj" "3674"}
{"mnof" "1286"}
{"mnog" "0053"}
{"xy" "2113"}
{"xyz" "4113"}
]

\index=
{"" "5763"
void
{"123456" "v1_123456"
void
{"a" "4999"
{"bc" "4113"
{"d" "2174"
void
void
}
void
}
{"def" "7249"
void
{"fgh" void
{"i" "5851"
void
{"j" "3674"
void
void
}
}
{"mno" void
{"f" "1285"
void
{"g" "0053"
void
void
}
}
{"xy" "2113"
{"z" "4113"
void
void
}
void
}
}
}
}
}
}
}
\pairs=
[
{"" "5763"}
{"123456" "v1_123456"}
{"a" "4999"}
{"abc" "4113"}
{"abcd" "2174"}
{"def" "7249"}
{"fghi" "5851"}
{"fghj" "3674"}
{"mnof" "1285"}
{"mnog" "0053"}
{"xy" "2113"}
{"xyz" "4113"}
]

\index=
{"a" "4998"
{"bc" "4113"
{"d" "2174"
void
void
}
void
}
void
}
\pairs=
[
{"a" "4998"}
{"abc" "4113"}
{"abcd" "2174"}
]

\index=
{"a" "4998"
{"bc" "4113"
{"d" "2174"
void
void
}
void
}
void
}
\pairs=
[
{"a" "4998"}
{"abc" "4113"}
{"abcd" "2174"}
]

== 0
\index=
void
\pairs=
[
]

== 1
\index=
{"abc" "4113"
void
void
}
\pairs=
[
{"abc" "4113"}
]

== 2
\index=
{"ab" void
{"c" "4113"
void
{"e" "1210"
void
void
}
}
void
}
\pairs=
[
{"abc" "4113"}
{"abe" "1210"}
]

== 3
\index=
{"a" "4999"
{"b" void
{"c" "4113"
void
{"e" "1210"
void
void
}
}
void
}
void
}
\pairs=
[
{"a" "4999"}
{"abc" "4113"}
{"abe" "1210"}
]

== 4
\index=
{"ab" void
{"c" "4113"
void
{"e" "1210"
void
void
}
}
void
}
\pairs=
[
{"abc" "4113"}
{"abe" "1210"}
]

== 5
\index=
{"abe" "1210"
void
void
}
\pairs=
[
{"abe" "1210"}
]

== 6
\index=
void
\pairs=
[
]

== 0
\index=
void
\pairs=
[
]

== 1
\index=
{"" "5763"
void
void
}
\pairs=
[
{"" "5763"}
]

== 2
\index=
{"" "5764"
void
void
}
\pairs=
[
{"" "5764"}
]

== 3
\index=
{"" "5765"
void
void
}
\pairs=
[
{"" "5765"}
]

== 4
\index=
void
\pairs=
[
]

\index=
{"" "5763"
void
{"123456" "v2_123456"
void
{"a" "4999"
{"bc" "4113"
{"d" "2174"
void
void
}
void
}
{"def" "7249"
void
{"fgh" void
{"i" "5851"
void
{"j" "3674"
void
void
}
}
{"mno" void
{"f" "1286"
void
{"g" "0053"
void
void
}
}
{"xy" "2113"
{"z" "4113"
void
void
}
void
}
}
}
}
}
}
}
\pairs=
[
{"" "5763"}
{"123456" "v2_123456"}
{"a" "4999"}
{"abc" "4113"}
{"abcd" "2174"}
{"def" "7249"}
{"fghi" "5851"}
{"fghj" "3674"}
{"mnof" "1286"}
{"mnog" "0053"}
{"xy" "2113"}
{"xyz" "4113"}
]
get: {"" "5763"}
get: {"abcxyz" void}
get: {"abc" "4113"}
get: {"." void}
get: {"a" "4999"}
get: {"ab" void}
get: {"mno" void}
get: {"mnof" "1286"}
get: {"mnofx" void}
get: {"1234" void}
get: {"mnog" "0053"}
get: {"mnOg" void}
==
get: {"" "5763"}
get: {"123456" "v2_123456"}
get: {"a" "4999"}
get: {"abc" "4113"}
get: {"abcd" "2174"}
get: {"def" "7249"}
get: {"fghi" "5851"}
get: {"fghj" "3674"}
get: {"mnof" "1286"}
get: {"mnog" "0053"}
get: {"xy" "2113"}
get: {"xyz" "4113"}
{"abc" "4113"
void
void
}
get: {"abc" "4113"}
get: {"" void}
exit 0
==== test/chars.fxl
==
封封aa小小
T
==
41 A 41
4f O 4f
4F O 4f
61 a 61
62 b 62
7e ~ 7e
c3a5 å c3a5
c3bc ü c3bc
c3a4 ä c3a4
C3A4 ä c3a4
e289a0 ≠ e289a0
e5b081 封 e5b081
e5b08f 小 e5b08f
e5b08161e5b08f 封a小 e5b08161e5b08f
==
28b98aa5dac67e29a98d2920f91500b6
28b98aa5dac67e29a98d2920f91500b6
2

6600f
exit 0
==== test/date.fxl
count_days 20160208 20160301 = 22
count_days 20160301 20160208 = -22
count_days 20160208 20160229 = 21
count_days 20160229 20160208 = -21
count_days 20160229 20160229 = 0
count_days 20160229 20160229 = 0
count_days 20160228 20170228 = 366
count_days 20170228 20160228 = -366
count_days 20170228 20180228 = 365
count_days 20180228 20170228 = -365
count_days 20160229 20160208 = -21
count_days 20160208 20160229 = 21
add_days 20160208 0 = 20160208  check 0  good
add_days 20160208 7 = 20160215  check 7  good
add_days 20160208 21 = 20160229  check 21  good
add_days 20160208 22 = 20160301  check 22  good
add_days 20160208 23 = 20160302  check 23  good
add_days 20160208 365 = 20170207  check 365  good
add_days 20160101 365 = 20161231  check 365  good
add_days 20170101 365 = 20180101  check 365  good
add_days 20160301 -1 = 20160229  check -1  good
add_days 20160302 -1 = 20160301  check -1  good
add_days 20160302 -2 = 20160229  check -2  good
add_days 20160302 -3 = 20160228  check -3  good
add_days 20160302 -23 = 20160208  check -23  good
add_days 20160302 -28 = 20160203  check -28  good
add_days 20160302 -29 = 20160202  check -29  good
add_days 20160302 -30 = 20160201  check -30  good
add_days 20160302 -365 = 20150303  check -365  good
dow 20160101 = 5
dow 20160104 = 1
dow 20160108 = 5
dow 20160115 = 5
dow 20160121 = 4
dow 20160129 = 5
dow 20160205 = 5
dow 20160212 = 5
dow 20160219 = 5
dow 20160226 = 5
dow 20160304 = 5
dow 20160311 = 5
dow 19631117 = 7
dow 19631118 = 1
dow 19631119 = 2
dow 19631120 = 3
dow 19631121 = 4
dow 19631122 = 5
dow 19631123 = 6
dow 19631124 = 7

dow 23000225 = 7
dow 23000226 = 1
dow 23000227 = 2
dow 23000228 = 3
dow 23000301 = 4

dow 23040225 = 4
dow 23040226 = 5
dow 23040227 = 6
dow 23040228 = 7
dow 23040229 = 1
dow 23040301 = 2
dow 23040302 = 3
dow 23040303 = 4
dow 23040306 = 7

add_year 20000228 = 20010228
add_year 20000229 = 20010229
add_year 20150228 = 20160228
add_year 20150301 = 20160301

exit 0
==== test/sat.fxl
SAT 0 T
[
[]
]

SAT 0 F
[
]

SAT 2 (\a\b and a b)
[
[TT]
]

SAT 2 (\a\b or a b)
[
[TT]
[TF]
[FT]
]

SAT 2 (\a\b or (not a) b)
[
[TT]
[FT]
[FF]
]

SAT 4 (\a\b\c\d (and (or (and a d) c) (not (and b d))))
[
[TTTF]
[TFTT]
[TFTF]
[TFFT]
[FTTF]
[FFTT]
[FFTF]
]

SAT 17 ...
[
[TTFTTFTTFTFTTTTTT]
]

exit 0
==== test/get_byte.fxl
[
ch 61
ch 62
ch 63
ch 41
ch 42
ch 43
ch 0a
ch 6a
ch 6a
ch 6a
ch 61
ch e5
ch b0
ch 8f
ch 0a
ch c3
ch a5
ch c3
ch bc
ch c3
ch a4
ch e2
ch 89
ch a0
ch 0a
ch e5
ch 8c
ch 85
ch e5
ch ad
ch 90
ch 0a
]
exit 0
====
hi
exit 1
====
Unclosed string on line 1
exit 1
====
Unclosed string on line 2
exit 1
====
Unclosed string on line 1
exit 1
====
Unclosed string on line 3
exit 1
====
Incomplete string terminator on line 1
exit 1
====
Unclosed string on line 1
exit 1
====
Incomplete string terminator on line 1
exit 1
====
Missing name declaration before '=' on line 1
exit 1
====
Missing name after '\' on line 1
exit 1
====
Missing definition on line 1
exit 1
====
Unclosed parenthesis on line 3
exit 1
====
Unclosed parenthesis on line 1
exit 1
====
Unclosed bracket on line 3
exit 1
====
Unclosed brace on line 3
exit 1
====
Extraneous input on line 2
exit 1
====
Undefined symbol a on line 2
Undefined symbol b on line 2
Undefined symbol c on line 2
Undefined symbol b on line 2
Undefined symbol c on line 2
Undefined symbol d on line 2
Undefined symbol a on line 3
Undefined symbol b on line 3
Undefined symbol c on line 3
Undefined symbol b on line 3
Undefined symbol c on line 3
Undefined symbol d on line 3
Undefined symbol x on line 5
exit 1
====
Undefined symbol a on line 1
Undefined symbol a on line 2
Undefined symbol c on line 2
Undefined symbol c on line 3
exit 1
==== missing.fxl
Could not open source file missing.fxl
exit 1
====
Could not open source file missing.fxl
exit 1
