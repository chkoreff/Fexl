#

\div=(later; say "==")

\say_x=(\x put "x = " say x)
say_x 3
say_x 4
say_x 5

\do_range=
	(\x\y\f
	\x=(round x)
	\y=(round y)
	\d=(le x y 1 -1)
	\loop==
		(\x
		f x
		eq x y ();
		\x=(+ x d)
		loop x
		)
	loop x
	)

# (fib n) returns the nth Fibonacci number starting at 0.
\fib=
	(
	\loop==
		(\x\y\n
		le n 0 x;
		\z=(+ x y)
		\n=(- n 1)
		loop y z n
		)
	loop 0 1
	)

\try_fib=
(
later;
div

\try=
	(\x\y
	do_range x y \n
	put "fib " put n put " = " say (fib n)
	)

try 0 8
div
try 8 0
div
try 30 30
div
try 11.2 20.5
)

do_range 1 1000 \n try_fib
