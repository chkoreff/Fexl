# Test creating a library system in a simulated file system.
show_benchmark;

# Simulated file system.
\get_file=
(\name

eq name "stuff.fxl"
(
~~
def "stuff" (say "Do some stuff.");
void
~~
);

eq name "test.fxl"
(
~~
say (is_good (std "say"))
say (is_good (std "using"))
say (is_good (lib "stuff.fxl" "stuff"))

\div==(say "==")

using
	[
	(lib "stuff.fxl")
	(
	say "other stuff here"
	def "div" div;
	void
	)
	std
	] \;

put "== in test.fxl: " stuff

def "div" div;
void
~~
);

eq name "flintstone.fxl"
(
~~
\fred==(say "I am Fred.")
\wilma==(say "I am Wilma.")
\barney==(say "I am Barney.")
\betty==(say "I am Betty.")

def "fred" fred;
def "wilma" wilma;
def "barney" barney;
def "betty" betty;
# Any of these would introduce leaks if I didn't explicitly clear the cache.
def "std" std;
def "lib" lib;
void
~~
);

eq name "try.fxl"
(
~~
using
[
(lib "flintstone.fxl")
(lib "flintstone.fxl")
(lib "test.fxl")
std
] \;

say "run try.fxl"
div

fred
wilma
barney
betty
# Run some files directly.
use "hello.fxl" std
use "hello.fxl" std
use "nothing.fxl" std
~~
);

eq name "hello.fxl"
(
~~
using [(lib "test.fxl") (lib "stuff.fxl") std] \; # not actually needed
say "Hello world."
~~
);

eq name "nothing.fxl"
(
~~
using
	[
	(
	say "Will not reach this."
	std
	)
	] \;

# No symbols used, so will not even try the context.
~~
);

error ["Could not open "name]
void
)

\parse_file=
	(\name
	say ["  parse_file "name]
	\text=(get_file name)
	parse text name
	)

\use=
	(\name\context
	evaluate context;
	parse_file name
	)

\std=
(
def "use" use;
std
)

def_lib parse_file std \lib

\std=
(
def_context "std";
def "lib" lib;
std
)

\script_name="try.fxl"

evaluate std;
parse_file script_name
