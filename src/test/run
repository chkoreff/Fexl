#!/bin/sh

beg_test()
	{
	echo "["
	}

end_test()
	{
	local code=$?
	local status
	if [ $code -eq 0 ]; then
		status=good
	else
		status=bad
	fi
	echo "] $status"
	}

# Empty program
beg_test
(
echo -n "" | ../bin/fexl
) 2>&1
end_test

# Unclosed string
beg_test
(
cat <<'EOM' | ../bin/fexl

"x
EOM
) 2>&1
end_test

# Unclosed string
beg_test
(
cat <<'EOM' | ../bin/fexl
~| x
EOM
) 2>&1
end_test

# Incomplete string terminator
beg_test
(
echo -n "~ABCD" | ../bin/fexl
) 2>&1
end_test

# Unclosed parentheses
beg_test
(
cat <<'EOM' | ../bin/fexl
((x y)
EOM
) 2>&1
end_test

# Missing lambda symbol
beg_test
(
cat <<'EOM' | ../bin/fexl
\
EOM
) 2>&1
end_test

# Missing lambda symbol
beg_test
(
cat <<'EOM' | ../bin/fexl
\=(x y)
EOM
) 2>&1
end_test

# Missing definition
beg_test
(
cat <<'EOM' | ../bin/fexl
\x=(+ 2 3)
\y=
\z=(- 7 8)
EOM
) 2>&1
end_test

# Missing symbol declaration
beg_test
(
cat <<'EOM' | ../bin/fexl

(
= 4
)
EOM
) 2>&1
end_test

# Extraneous input
beg_test
(
cat <<'EOM' | ../bin/fexl
\x=(+ 2 3)
say (* x x)

)
EOM
) 2>&1
end_test

# Say "25"
beg_test
(
cat <<'EOM' | ../bin/fexl
\x=(+ 2 3)
say (* x x)
\\
Extra stuff down here not parsed.
EOM
) 2>&1
end_test

beg_test
(
../bin/fexl test/a1.fxl
) 2>&1
end_test

beg_test
cat <<'EOM' | ../bin/fexl test/a2.fxl
Hixåabc
dü≠m
EOM
end_test

beg_test
(
../bin/fexl test/utf8.fxl
) 2>&1
end_test

# undefined symbol
beg_test
(
cat <<'EOM' | ../bin/fexl
aa bb
c
EOM
) 2>&1
end_test
